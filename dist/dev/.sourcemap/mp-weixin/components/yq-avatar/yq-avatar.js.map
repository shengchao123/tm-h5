{"version":3,"sources":["webpack:///./src/components/yq-avatar/yq-avatar.vue?c95d","webpack:///./src/components/yq-avatar/yq-avatar.vue?51f7","webpack:///./src/components/yq-avatar/yq-avatar.vue?2562","webpack:///./src/components/yq-avatar/yq-avatar.vue?4354","uni-app:///src/components/yq-avatar/yq-avatar.vue","webpack:///./src/components/yq-avatar/yq-avatar.vue?5e09","webpack:///./src/components/yq-avatar/yq-avatar.vue?3b9d"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqI;AACrI;AAC6D;AACL;AACa;;;AAGrE;AACmI;AACnI,gBAAgB,gJAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,mGAAM;AACR,EAAE,4GAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,uGAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAsc,CAAgB,keAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoE7c;;;;;;;;;;;;;;;;;;;;;AACb;eACA;AACA,mBADA;AAEA,MAFA,kBAEA;AACA;AACA,gBADA;AAEA,gBAFA;AAGA,oBAHA;AAIA,oBAJA;AAKA,YALA;AAMA,YANA;AAOA,cAPA;AAQA,eARA;AASA,gBATA;AAUA,WAVA;AAWA;AACA;AADA;AAXA;AAeA,GAlBA;AAmBA;AACA,aADA,uBACA;AACA;AACA;AAHA,GAnBA;AAwBA;AACA,iBADA;AAEA,mBAFA;AAGA,gBAHA;AAIA,iBAJA;AAKA,gBALA;AAMA,iBANA;AAOA,gBAPA;AAQA,gBARA;AASA,gBATA;AAUA,iBAVA;AAWA,iBAXA;AAYA,kBAZA;AAaA,eAbA;AAcA,YAdA;AAeA,gBAfA;AAgBA,aAhBA;AAiBA,aAjBA;AAkBA,eAlBA;AAmBA;AACA;AApBA,GAxBA;AA8CA,SA9CA,qBA8CA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEARA,CASA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,sBADA,CAEA;AACA,KAHA,MAGA;AACA,sBADA,CAEA;AACA;;AAEA;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA;AACA,SAHA;AAIA;AACA;AACA,SANA;AAOA;AACA;AACA;AATA;AAWA;AACA,GArFA;AAsFA;AACA,iBADA,2BACA;AACA;AACA;AACA;AAMA;AASA;AACA;AACA;AAGA;AAKA;AAEA;;AACA;AACA;AACA;;AAFA,mDAGA,KAHA;AAAA;;AAAA;AAGA;AAAA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;;AAkBA;AACA;;AAEA,0HACA,uBADA;AAEA,6HACA,wBADA;;AAGA;AACA;AACA;;AACA;AACA,KA9DA;AA+DA,WA/DA,qBA+DA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAFA,EAEA,GAFA;AAIA;AACA,gBADA;AAEA,4CAFA;AAGA,uCAHA;AAIA;AAKA;AACA,2BADA;AAEA;AAFA;AAMA;AACA;AACA,qBADA;AAEA;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA,kIACA,eADA;AAAA,sBAEA,8GACA,gBADA,CAFA;AAIA;AACA;AACA;AACA;AACA,iBATA,MASA;AACA;AACA,wCADA;AAEA;AAFA;AAIA;AACA;;AACA;AACA;;AAEA;AACA;AACA,eAFA,MAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA,aApCA;AAqCA;AACA;AACA,gCADA;AAEA;AAFA;AAIA,aA1CA;AA2CA,oBA3CA,sBA2CA;AACA;AACA;AA7CA;AA+CA;AA/DA;AAiEA,KAvIA;AAwIA,WAxIA,qBAwIA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAFA,EAEA,IAFA;AAIA;AAAA,UACA,wBADA;AAAA,UAEA,uBAFA;AAAA,UAGA,6BAHA;AAAA,UAIA,+BAJA;AAAA,UAKA,6CALA;AAAA,UAMA,+CANA;AAYA;AACA,uBADA;AAEA;AAFA;AAMA;AACA;AACA;AACA;AAmCA;AACA,YADA;AAEA,YAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA,2BALA;AAMA,6BANA;AAOA,iCAPA;AAQA,4BARA;AASA,0BATA;AAUA;AACA;;AAcA;AACA,iCADA;AAEA,mBAFA;AAGA;AACA,4BAJA;AAKA;AALA;AAQA,SAjCA;AAkCA;AACA;AACA,2BADA;AAEA;AAFA;AAIA,SAvCA;AAwCA;AACA;AACA;;AACA;AACA;AA5CA,SA6CA,IA7CA;AA+CA,KAtPA;AAuPA,cAvPA,wBAuPA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAFA,EAEA,IAFA;AAIA;AAAA,UACA,iCADA;AAAA,UAEA,mCAFA;AAAA,UAGA,gBAHA;AAAA,UAIA,gBAJA;AAAA,UAKA,wBALA;AAAA,UAMA,0BANA;AAAA,UAOA,6DAPA;AAAA,UAQA,+DARA;AAcA;AACA,uBADA;AAEA;AAFA;AAMA;AACA;AACA;AACA;AAmCA;AACA,eADA;AAEA,eAFA;AAGA,uBAHA;AAIA,yBAJA;AAKA,2BALA;AAMA,6BANA;AAOA,8BAPA;AAQA,4BARA;AASA,0BATA;AAUA;AACA;;AAaA;AACA,iCADA;AAEA,mBAFA;AAGA;AACA,4BAJA;AAKA;AALA;AAQA,SAhCA;AAiCA;AACA;AACA,8BADA;AAEA;AAFA;AAIA,SAtCA;AAuCA;AACA;AACA;;AACA;AACA;AA3CA,SA4CA,IA5CA;AA8CA,KAtWA;AAuWA,aAvWA,uBAuWA;AAAA;;AAAA;AACA;AAAA,UACA,mBADA;AAAA,UAEA,wBAFA;AAAA,UAGA,0BAHA;AAAA,UAIA,+BAJA;AAAA,UAKA,wBALA;AAAA,UAMA,+BANA;AAAA,UAOA,+BAPA;AAAA,UAQA,4BARA;AAAA,UASA,6BATA;AAWA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,mDACA;AACA;;AACA;AACA,oDACA;AACA;;AACA;AACA,8CACA;AACA;;AACA;AACA,+CACA;AACA;AAtBA;;AAwBA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,mDACA;AACA;;AACA;AACA,oDACA;AACA;;AACA;AACA,8CACA;AACA;;AACA;AACA,+CACA;AACA;AAtBA;;AAwBA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA,OAPA,MAOA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA,UACA,2BADA;AAAA,UAEA,yBAFA;AAAA,UAGA,6BAHA;AAAA,UAIA,+BAJA;AAAA,UAKA,oBALA;AAAA,UAMA,4BANA;AAAA,UAOA,YAPA;AAAA,UAQA,cARA;AAUA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA,OANA;AAOA;AACA,KAngBA;AAogBA,cApgBA,wBAogBA;AAAA;AACA;AACA;AACA;AAEA;AAAA,UACA,yCADA;AAAA,UAEA,2CAFA;;AAQA;AAKA;AAEA,OAPA,MAOA;AACA;AACA;;AAEA;AACA;AAAA,YACA,uCADA;AAGA;AACA;AACA;AAEA,OARA,MAQA;AACA;AACA;AACA;AACA;;AAEA;AAKA,KA/iBA;AAgjBA,YAhjBA,sBAgjBA;AAAA;;AACA;AACA;AACA;AACA;AACA,OAFA,EAEA,IAFA;AAIA;AAAA,UACA,wBADA;AAAA,UAEA,uBAFA;AAAA,UAGA,6BAHA;AAAA,UAIA,+BAJA;AAUA;AACA,uBADA;AAEA;AAFA;AA2DA;AACA,YADA;AAEA,YAFA;AAGA,oBAHA;AAIA,sBAJA;AAKA,yCALA;AAMA,2CANA;AAOA,iCAPA;AAQA,4BARA;AASA,0BATA;AAUA;AACA;AAEA;AAAA,cACA,gBADA;AAAA,cAEA,2BAFA;AAaA;AAAA,cACA,sCADA;AAAA,cAEA,oBAFA;AAAA,cAGA,qBAHA;AAAA,cAIA,2BAJA;AAAA,cAKA,2BALA;;AAMA;AACA;AACA;AACA,WAHA,MAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AASA,4BA9CA,CA+CA;;AACA;AACA,SA3DA;AA4DA;AACA;AACA,2BADA;AAEA;AAFA;AAIA,SAjEA;AAkEA;AACA;AACA;AApEA,SAqEA,IArEA;AAuEA,KAnsBA;AAosBA,cApsBA,wBAosBA;AAAA;AAAA;;AACA;AACA;AAAA,YACA,qBADA;AAAA,YAEA,0BAFA;AAAA,YAGA,4BAHA;AAAA,YAIA,wBAJA;AAAA,YAKA,4BALA;AAAA,YAMA,0BANA;AAAA,YAOA,0BAPA;AAAA,YAQA,0BARA;AAAA,YASA,wBATA;AAAA,YAUA,0BAVA;AAAA,YAWA,oBAXA;AAAA,YAYA,kBAZA;AAcA,sHACA,QADA;AAEA,yHACA,SADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA,0BADA,CAEA;AACA,SAHA,MAGA;AACA,0BADA,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBA/CA,CAgDA;;AACA;AACA,KAtvBA;AAuvBA,WAvvBA,qBAuvBA;AACA;AACA;AACA,KA1vBA;AA2vBA,UA3vBA,kBA2vBA,CA3vBA,EA2vBA;AACA;AAAA,UACA,mBADA;AAAA,UAEA,mBAFA;AAIA;AACA;;AAEA;AACA;AAAA,YACA,uBADA;AAEA;AACA;AACA,KAxwBA;AAywBA,SAzwBA,iBAywBA,CAzwBA,EAywBA;AACA;AAAA,UACA,mBADA;AAAA,UAEA,mBAFA;;AAIA;AACA;AAAA,YACA,uBADA;AAAA,YAEA,qCAFA;AAAA,YAGA,kDAHA;AAAA,YAIA,wCAJA;;AAMA;AACA;AACA;AACA;AAEA;AAAA,cACA,sCADA;;AAEA;AACA;AAAA,gBACA,wCADA;AAAA,gBAEA,yBAFA;AAAA,gBAGA,0BAHA;AAAA,gBAIA,gBAJA;AAAA,gBAKA,iBALA;AAAA,gBAMA,6BANA;AAAA,gBAOA,2BAPA;AAAA,gBAQA,+BARA;AAAA,gBASA,iCATA;AAAA,gBAUA,oBAVA;AAAA,gBAWA,qBAXA;AAAA,gBAYA,WAZA;AAAA,gBAYA,WAZA;AAcA;AACA,oEACA,sDADA;AAEA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,WAhCA,MAgCA;AACA;AACA;AACA;;AAEA;AACA,SA7CA,QA6CA,CA7CA;;AA8CA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OA/DA,MA+DA;AACA;AAAA,YACA,6BADA;AAAA,YAEA,wBAFA;AAAA,YAGA,yBAHA;;AAIA;AACA;AAAA,cACA,4CADA;AAAA,cAEA,QAFA;AAAA,cAGA,QAHA;AAAA,cAIA,mBAJA;AAAA,cAKA,oBALA;AAAA,cAMA,8BANA;AAAA,cAOA,4BAPA;AAAA,cAQA,wCARA;AAAA,cASA,yCATA;AAAA,cAUA,GAVA;AAAA,cAUA,GAVA;;AAYA;AACA;;AAEA;AACA;AACA;AACA,aAFA,MAEA;AACA;AACA,aAFA,MAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,aAHA,MAGA;AACA;AACA;AACA,aAHA,MAGA;AACA;AACA;AACA;AACA;AACA,SAtCA,MAsCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAl4BA;AAm4BA,QAn4BA,gBAm4BA,CAn4BA,EAm4BA;AACA;AAAA,UACA,8BADA;AAAA,UAEA,8BAFA;;AAGA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KA74BA;AA84BA,YA94BA,sBA84BA;AACA;AACA;AACA;AACA;AACA;AACA,KAp5BA;AAq5BA,UAr5BA,oBAq5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA55BA;AA65BA,eA75BA,yBA65BA;AAAA;;AACA;AACA;AAAA,YACA,kBADA;AAAA,YAEA,0BAFA;AAAA,YAGA,4BAHA;AAmBA;AACA,gCADA;AAEA,iBAFA;AAGA,iBAHA;AAIA,yBAJA;AAKA,2BALA;AAMA,iBANA,mBAMA,GANA,EAMA;AACA;AACA,WARA;AASA,cATA,gBASA,GATA,EASA;AACA;AACA;AAXA,WAYA,MAZA;AAcA,OAlCA;AAmCA,KAj8BA;AAk8BA,gBAl8BA,wBAk8BA,CAl8BA,EAk8BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,sBADA,GACA,UADA;;AAAA,sBAEA,2BAFA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGA;AAMA;AACA,iCADA;AAEA;AAFA;;AATA,oBAeA,iBAfA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAgBA;AACA;AACA,uCADA;AAEA;AAFA;AAIA,iBALA,CAhBA;;AAAA;AAAA,oBAgBA,iBAhBA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAuBA;;AAvBA;AA0BA,oBA1BA,GA0BA,iBA1BA,EA2BA,MA3BA,GA2BA,aA3BA,EA4BA,CA5BA,GA4BA,cA5BA;;AA+BA;AACA;AACA,iBAFA,MAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA,qBAFA,MAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA;;AACA;;AACA;AACA;AACA,qBAFA,MAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA;;AACA;;AAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA;;AAEA;AACA;AACA,qBAFA,MAEA;AACA;AACA;AACA,uBAFA,MAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,gCAXA,GAWA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,uBAnBA;;AAoBA,+BApBA,GAoBA;AACA;AACA;AACA,yBAFA,MAEA;AACA;AACA,yBAFA,MAEA;AACA;AACA;;AACA;AACA,uBA7BA;;AA8BA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAlHA,GAkHA,WAlHA,EAmHA,IAnHA,GAmHA,WAnHA,EAoHA,QApHA,GAoHA,eApHA,EAqHA,SArHA,GAqHA,gBArHA;AA2IA;AACA,wCADA;AAEA,yBAFA;AAGA,yBAHA;AAIA,iCAJA;AAKA,mCALA;AAMA,8BANA;AAOA,sBAPA,kBAOA;AACA;AACA,wCADA;AAEA;AAFA;AAIA,mBAZA;AAaA,0BAbA,sBAaA;AACA;AACA;AAfA,mBAgBA,MAhBA;;AA3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6JA,KA/lCA;AAgmCA,QAhmCA,gBAgmCA,MAhmCA,EAgmCA;AACA;AACA;AACA;AAAA,YACA,iCADA;AAAA,YAEA,mBAFA;AAAA,YAGA,eAHA;AAAA,YAIA,yBAJA;;AAKA;AACA;AACA;;AACA;AACA;AADA;AAGA,OAZA;AAaA;AA/mCA;AAtFA,C;;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAqtB,CAAgB,utBAAG,EAAC,C;;;;;;;;;;;ACAzuB;AACA,OAAO,KAAU,EAAE,kBAKd","file":"components/yq-avatar/yq-avatar.js","sourcesContent":["import { render, staticRenderFns, recyclableRender, components } from \"./yq-avatar.vue?vue&type=template&id=795a15bc&name=yq-avatar&\"\nvar renderjs\nimport script from \"./yq-avatar.vue?vue&type=script&lang=js&\"\nexport * from \"./yq-avatar.vue?vue&type=script&lang=js&\"\nimport style0 from \"./yq-avatar.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/yq-avatar/yq-avatar.vue\"\nexport default component.exports","export * from \"-!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--14-0!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./yq-avatar.vue?vue&type=template&id=795a15bc&name=yq-avatar&\"","var components\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var s0 = _vm.__get_style([_vm.iS])\n\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        s0: s0\n      }\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./yq-avatar.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./yq-avatar.vue?vue&type=script&lang=js&\"","<template name=\"yq-avatar\">\r\n  <view>\r\n    <image :src=\"imgSrc.imgSrc\"\r\n           @click=\"fSelect\"\r\n           :style=\"[ iS ]\"\r\n           class=\"my-avatar\"></image>\r\n    <canvas canvas-id=\"avatar-canvas\"\r\n            id=\"avatar-canvas\"\r\n            class=\"my-canvas\"\r\n            :style=\"{top: sT, height: csH}\"\r\n            disable-scroll=\"false\"></canvas>\r\n    <canvas canvas-id=\"oper-canvas\"\r\n            id=\"oper-canvas\"\r\n            class=\"oper-canvas\"\r\n            :style=\"{top: sT, height: csH}\"\r\n            disable-scroll=\"false\"\r\n            @touchstart=\"fStart\"\r\n            @touchmove=\"fMove\"\r\n            @touchend=\"fEnd\"></canvas>\r\n    <canvas canvas-id=\"prv-canvas\"\r\n            id=\"prv-canvas\"\r\n            class=\"prv-canvas\"\r\n            disable-scroll=\"false\"\r\n            @touchstart=\"fHideImg\"\r\n            :style=\"{ height: csH, top: pT }\"></canvas>\r\n    <view class=\"oper-wrapper\"\r\n          :style=\"{display: sD, top:tp}\">\r\n      <view class=\"oper\">\r\n        <view class=\"btn-wrapper\"\r\n              v-if=\"sO\">\r\n          <view @click=\"fSelect\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW}\"><text>重选</text></view>\r\n          <view @click=\"fClose\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW}\"><text>关闭</text></view>\r\n          <view @click=\"fRotate\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW, display: bD}\"><text>旋转</text></view>\r\n          <view @click=\"fPreview\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW}\"><text>预览</text></view>\r\n          <view @click=\"fUpload\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW}\"><text>上传</text></view>\r\n        </view>\r\n        <view class=\"clr-wrapper\"\r\n              v-else>\r\n          <slider class=\"my-slider\"\r\n                  @change=\"fColorChange\"\r\n                  block-size=\"25\"\r\n                  value=\"0\"\r\n                  min=\"-100\"\r\n                  max=\"100\"\r\n                  activeColor=\"red\"\r\n                  backgroundColor=\"green\"\r\n                  block-color=\"grey\"\r\n                  show-value></slider>\r\n          <view @click=\"fPrvUpload\"\r\n                hover-class=\"hover\"\r\n                :style=\"{width: bW}\"><text>上传</text></view>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\n\"use strict\";\r\nconst tH = 50;\r\nexport default {\r\n  name: \"yq-avatar\",\r\n  data () {\r\n    return {\r\n      csH: '0px',\r\n      sD: 'none',\r\n      sT: '-10000px',\r\n      pT: '-10000px',\r\n      iS: {},\r\n      sS: {},\r\n      sO: true,\r\n      bW: '19%',\r\n      bD: 'flex',\r\n      tp: 0,\r\n      imgSrc: {\r\n        imgSrc: ''\r\n      }\r\n    };\r\n  },\r\n  watch: {\r\n    avatarSrc () {\r\n      this.imgSrc.imgSrc = this.avatarSrc;\r\n    }\r\n  },\r\n  props: {\r\n    avatarSrc: '',\r\n    avatarStyle: '',\r\n    selWidth: '',\r\n    selHeight: '',\r\n    expWidth: '',\r\n    expHeight: '',\r\n    minScale: '',\r\n    maxScale: '',\r\n    canScale: '',\r\n    canRotate: '',\r\n    lockWidth: '',\r\n    lockHeight: '',\r\n    stretch: '',\r\n    lock: '',\r\n    fileType: '',\r\n    noTab: '',\r\n    inner: '',\r\n    quality: '',\r\n    // index: '',\r\n    bgImage: '',\r\n  },\r\n  created () {\r\n    this.cc = uni.createCanvasContext('avatar-canvas', this);\r\n    this.cco = uni.createCanvasContext('oper-canvas', this);\r\n    this.ccp = uni.createCanvasContext('prv-canvas', this);\r\n    this.qlty = parseFloat(this.quality) || 1;\r\n    this.imgSrc.imgSrc = this.avatarSrc;\r\n    this.letRotate = (this.canRotate === false || this.inner === true || this.inner === 'true' || this.canRotate === 'false') ? 0 : 1;\r\n    this.letScale = (this.canScale === false || this.canScale === 'false') ? 0 : 1;\r\n    this.isin = (this.inner === true || this.inner === 'true') ? 1 : 0;\r\n    // this.indx = this.index || undefined;\r\n    this.mnScale = parseFloat(this.minScale) || 0.3;\r\n    this.mxScale = parseFloat(this.maxScale) || 4;\r\n    this.noBar = (this.noTab === true || this.noTab === 'true') ? 1 : 0;\r\n    this.stc = this.stretch;\r\n    this.lck = this.lock;\r\n    this.fType = this.fileType === 'jpg' ? 'jpg' : 'png';\r\n    if (this.isin || !this.letRotate) {\r\n      this.bW = '24%';\r\n      // this.bD = 'flex';\r\n    } else {\r\n      this.bW = '19%';\r\n      // this.bD = 'flex';\r\n    }\r\n\r\n    if (this.noBar) {\r\n      this.fWindowResize();\r\n    } else {\r\n      uni.showTabBar({\r\n        fail: () => {\r\n          this.noBar = 1;\r\n        },\r\n        success: () => {\r\n          this.noBar = 0;\r\n        },\r\n        complete: (res) => {\r\n          this.fWindowResize();\r\n        }\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    fWindowResize () {\r\n      let sysInfo = uni.getSystemInfoSync();\r\n      this.platform = sysInfo.platform;\r\n      this.wW = sysInfo.windowWidth;\r\n\r\n      // #ifdef H5\r\n      this.drawTop = sysInfo.windowTop;\r\n      // #endif\r\n      // #ifndef H5\r\n      this.drawTop = 0;\r\n      // #endif\r\n\r\n      // #ifdef MP-ALIPAY\r\n      this.wH = sysInfo.screenHeight - sysInfo.statusBarHeight - sysInfo.titleBarHeight;\r\n      this.csH = this.wH - tH + 'px';\r\n      // #endif\r\n\r\n      // #ifndef MP-ALIPAY\r\n      this.wH = sysInfo.windowHeight;\r\n      if (!this.noBar) this.wH += tH;\r\n      this.csH = this.wH - tH + 'px';\r\n      // #endif\r\n\r\n      this.tp = this.csH;\r\n      // #ifdef H5\r\n      this.tp = sysInfo.windowTop + parseInt(this.csH) + 'px';\r\n      // #endif\r\n\r\n      this.pxRatio = this.wW / 750;\r\n\r\n      let style = this.avatarStyle;\r\n      if (style && style !== true && (style = style.trim())) {\r\n        style = style.split(';');\r\n        let obj = {};\r\n        for (let v of style) {\r\n          if (!v) continue;\r\n          v = v.trim().split(':');\r\n          if (v[1].toString().indexOf('rpx') >= 0) {\r\n            let arr = v[1].trim().split(' ');\r\n            for (let k in arr) {\r\n              if (!arr[k]) continue;\r\n              if (arr[k].toString().indexOf('rpx') >= 0) {\r\n                arr[k] = parseFloat(arr[k]) * this.pxRatio + 'px';\r\n              }\r\n            }\r\n            v[1] = arr.join(' ');\r\n          }\r\n          obj[v[0].trim()] = v[1].trim();\r\n        }\r\n        this.iS = obj;\r\n      }\r\n\r\n      this.expWidth && (this.eW = this.expWidth.toString().indexOf('rpx') >= 0 ? parseInt(this.expWidth) * this.pxRatio :\r\n        parseInt(this.expWidth));\r\n      this.expHeight && (this.eH = this.expHeight.toString().indexOf('rpx') >= 0 ? parseInt(this.expHeight) * this.pxRatio :\r\n        parseInt(this.expHeight));\r\n\r\n      if (this.sD === 'flex') {\r\n        this.fDrawInit(true);\r\n      }\r\n      this.fHideImg();\r\n    },\r\n    fSelect () {\r\n      if (this.fSelecting) return;\r\n      this.fSelecting = true;\r\n      setTimeout(() => {\r\n        this.fSelecting = false;\r\n      }, 500);\r\n\r\n      uni.chooseImage({\r\n        count: 1,\r\n        sizeType: ['original', 'compressed'],\r\n        sourceType: ['album', 'camera'],\r\n        success: (r) => {\r\n          // #ifdef MP-ALIPAY\r\n          uni.showLoading();\r\n          // #endif\r\n          // #ifndef MP-ALIPAY\r\n          uni.showLoading({\r\n            title: '加载中...',\r\n            mask: true\r\n          });\r\n          // #endif\r\n\r\n          let path = this.imgPath = r.tempFilePaths[0];\r\n          uni.getImageInfo({\r\n            src: path,\r\n            success: r => {\r\n              this.imgWidth = r.width;\r\n              this.imgHeight = r.height;\r\n              this.path = path;\r\n              if (!this.hasSel) {\r\n                let style = this.sS || {};\r\n                if (this.selWidth && this.selHeight) {\r\n                  let sW = this.selWidth.toString().indexOf('rpx') >= 0 ? parseInt(this.selWidth) * this.pxRatio : parseInt(\r\n                    this.selWidth),\r\n                    sH = this.selHeight.toString().indexOf('rpx') >= 0 ? parseInt(this.selHeight) * this.pxRatio : parseInt(\r\n                      this.selHeight);\r\n                  style.width = sW + 'px';\r\n                  style.height = sH + 'px';\r\n                  style.top = ((this.wH - sH - tH) | 0) / 2 + 'px';\r\n                  style.left = ((this.wW - sW) | 0) / 2 + 'px';\r\n                } else {\r\n                  uni.showModal({\r\n                    title: '裁剪框的宽或高没有设置',\r\n                    showCancel: false\r\n                  })\r\n                  return;\r\n                }\r\n                this.sS = style;\r\n              }\r\n\r\n              if (this.noBar) {\r\n                this.fDrawInit(true);\r\n              } else {\r\n                uni.hideTabBar({\r\n                  complete: () => {\r\n                    this.fDrawInit(true);\r\n                  }\r\n                });\r\n              }\r\n            },\r\n            fail: () => {\r\n              uni.showToast({\r\n                title: \"请选择正确图片\",\r\n                duration: 2000,\r\n              })\r\n            },\r\n            complete () {\r\n              uni.hideLoading();\r\n            }\r\n          });\r\n        }\r\n      })\r\n    },\r\n    fUpload () {\r\n      if (this.fUploading) return;\r\n      this.fUploading = true;\r\n      setTimeout(() => {\r\n        this.fUploading = false;\r\n      }, 1000)\r\n\r\n      let style = this.sS,\r\n        x = parseInt(style.left),\r\n        y = parseInt(style.top),\r\n        width = parseInt(style.width),\r\n        height = parseInt(style.height),\r\n        expWidth = this.eW || (width * this.pixelRatio),\r\n        expHeight = this.eH || (height * this.pixelRatio);\r\n\r\n      // #ifdef MP-ALIPAY\r\n      uni.showLoading();\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.showLoading({\r\n        title: '加载中...',\r\n        mask: true\r\n      });\r\n      // #endif\r\n\r\n      this.sD = 'none';\r\n      this.sT = '-10000px';\r\n      this.hasSel = false;\r\n      this.fHideImg();\r\n      // #ifdef MP-ALIPAY\r\n      this.cc.toTempFilePath({\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n        destWidth: expWidth,\r\n        destHeight: expHeight,\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          r = r.apFilePath;\r\n          this.$emit(\"upload\", {\r\n            avatar: this.imgSrc,\r\n            path: r,\r\n            // index: this.indx,\r\n            data: this.rtn,\r\n            base64: this.base64 || null\r\n          });\r\n        },\r\n        fail: (res) => {\r\n          uni.showToast({\r\n            title: \"error1\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n          this.noBar || uni.showTabBar();\r\n          this.$emit(\"end\");\r\n        }\r\n      });\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.canvasToTempFilePath({\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n        destWidth: expWidth,\r\n        destHeight: expHeight,\r\n        canvasId: 'avatar-canvas',\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          r = r.tempFilePath;\r\n          // #ifdef H5\r\n          this.btop(r).then((r) => {\r\n            this.$emit(\"upload\", {\r\n              avatar: this.imgSrc,\r\n              path: r,\r\n              // index: this.indx,\r\n              data: this.rtn,\r\n              base64: this.base64 || null\r\n            });\r\n            return;\r\n          })\r\n          // #endif\r\n          // #ifndef H5\r\n          this.$emit(\"upload\", {\r\n            avatar: this.imgSrc,\r\n            path: r,\r\n            // index: this.indx,\r\n            data: this.rtn,\r\n            base64: this.base64 || null\r\n          });\r\n          // #endif\r\n        },\r\n        fail: (res) => {\r\n          uni.showToast({\r\n            title: \"error1\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n          this.noBar || uni.showTabBar();\r\n          this.$emit(\"end\");\r\n        }\r\n      }, this);\r\n      // #endif\r\n    },\r\n    fPrvUpload () {\r\n      if (this.fPrvUploading) return;\r\n      this.fPrvUploading = true;\r\n      setTimeout(() => {\r\n        this.fPrvUploading = false;\r\n      }, 1000)\r\n\r\n      let style = this.sS,\r\n        destWidth = parseInt(style.width),\r\n        destHeight = parseInt(style.height),\r\n        prvX = this.prvX,\r\n        prvY = this.prvY,\r\n        prvWidth = this.prvWidth,\r\n        prvHeight = this.prvHeight,\r\n        expWidth = this.eW || (parseInt(style.width) * this.pixelRatio),\r\n        expHeight = this.eH || (parseInt(style.height) * this.pixelRatio);\r\n\r\n      // #ifdef MP-ALIPAY\r\n      uni.showLoading();\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.showLoading({\r\n        title: '加载中...',\r\n        mask: true\r\n      });\r\n      // #endif\r\n\r\n      this.sD = 'none';\r\n      this.sT = '-10000px';\r\n      this.hasSel = false;\r\n      this.fHideImg();\r\n      // #ifdef MP-ALIPAY\r\n      this.ccp.toTempFilePath({\r\n        x: prvX,\r\n        y: prvY,\r\n        width: prvWidth,\r\n        height: prvHeight,\r\n        destWidth: expWidth,\r\n        destHeight: expHeight,\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          r = r.apFilePath;\r\n          this.$emit(\"upload\", {\r\n            avatar: this.imgSrc,\r\n            path: r,\r\n            // index: this.indx,\r\n            data: this.rtn,\r\n            base64: this.base64 || null\r\n          });\r\n        },\r\n        fail: () => {\r\n          uni.showToast({\r\n            title: \"error_prv\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n          this.noBar || uni.showTabBar();\r\n          this.$emit(\"end\");\r\n        }\r\n      });\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.canvasToTempFilePath({\r\n        x: prvX,\r\n        y: prvY,\r\n        width: prvWidth,\r\n        height: prvHeight,\r\n        destWidth: expWidth,\r\n        destHeight: expHeight,\r\n        canvasId: 'prv-canvas',\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          r = r.tempFilePath;\r\n          // #ifdef H5\r\n          this.btop(r).then((r) => {\r\n            this.$emit(\"upload\", {\r\n              avatar: this.imgSrc,\r\n              path: r,\r\n              // index: this.indx,\r\n              data: this.rtn,\r\n              base64: this.base64 || null\r\n            });\r\n          })\r\n          // #endif\r\n          // #ifndef H5\r\n          this.$emit(\"upload\", {\r\n            avatar: this.imgSrc,\r\n            path: r,\r\n            // index: this.indx,\r\n            data: this.rtn,\r\n            base64: this.base64 || null\r\n          });\r\n          // #endif\r\n        },\r\n        fail: () => {\r\n          uni.showToast({\r\n            title: \"error_prv\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n          this.noBar || uni.showTabBar();\r\n          this.$emit(\"end\");\r\n        }\r\n      }, this);\r\n      // #endif\r\n    },\r\n    fDrawInit (ini = false) {\r\n      let allWidth = this.wW,\r\n        allHeight = this.wH,\r\n        imgWidth = this.imgWidth,\r\n        imgHeight = this.imgHeight,\r\n        imgRadio = imgWidth / imgHeight,\r\n        useWidth = allWidth - 40,\r\n        useHeight = allHeight - tH - 80,\r\n        useRadio = useWidth / useHeight,\r\n        sW = parseInt(this.sS.width),\r\n        sH = parseInt(this.sS.height);\r\n\r\n      this.fixWidth = 0;\r\n      this.fixHeight = 0;\r\n      this.lckWidth = 0;\r\n      this.lckHeight = 0;\r\n      switch (this.stc) {\r\n        case 'x':\r\n          this.fixWidth = 1;\r\n          break;\r\n        case 'y':\r\n          this.fixHeight = 1;\r\n          break;\r\n        case 'long':\r\n          if (imgRadio > 1) this.fixWidth = 1;\r\n          else this.fixHeight = 1;\r\n          break;\r\n        case 'short':\r\n          if (imgRadio > 1) this.fixHeight = 1;\r\n          else this.fixWidth = 1;\r\n          break;\r\n        case 'longSel':\r\n          if (sW > sH) this.fixWidth = 1;\r\n          else this.fixHeight = 1;\r\n          break;\r\n        case 'shortSel':\r\n          if (sW > sH) this.fixHeight = 1;\r\n          else this.fixWidth = 1;\r\n          break;\r\n      }\r\n      switch (this.lck) {\r\n        case 'x':\r\n          this.lckWidth = 1;\r\n          break;\r\n        case 'y':\r\n          this.lckHeight = 1;\r\n          break;\r\n        case 'long':\r\n          if (imgRadio > 1) this.lckWidth = 1;\r\n          else this.lckHeight = 1;\r\n          break;\r\n        case 'short':\r\n          if (imgRadio > 1) this.lckHeight = 1;\r\n          else this.lckWidth = 1;\r\n          break;\r\n        case 'longSel':\r\n          if (sW > sH) this.lckWidth = 1;\r\n          else this.lckHeight = 1;\r\n          break;\r\n        case 'shortSel':\r\n          if (sW > sH) this.lckHeight = 1;\r\n          else this.lckWidth = 1;\r\n          break;\r\n      }\r\n      if (this.fixWidth) {\r\n        useWidth = sW;\r\n        useHeight = useWidth / imgRadio;\r\n      } else if (this.fixHeight) {\r\n        useHeight = sH;\r\n        useWidth = useHeight * imgRadio;\r\n      } else if (imgRadio < useRadio) {\r\n        if (imgHeight < useHeight) {\r\n          useWidth = imgWidth;\r\n          useHeight = imgHeight;\r\n        } else {\r\n          useWidth = useHeight * imgRadio;\r\n        }\r\n      } else {\r\n        if (imgWidth < useWidth) {\r\n          useWidth = imgWidth;\r\n          useHeight = imgHeight;\r\n        } else {\r\n          useHeight = useWidth / imgRadio;\r\n        }\r\n      }\r\n      if (this.isin) {\r\n        if (useWidth < sW) {\r\n          useWidth = sW;\r\n          useHeight = useWidth / imgRadio;\r\n          this.lckHeight = 0;\r\n        }\r\n        if (useHeight < sH) {\r\n          useHeight = sH;\r\n          useWidth = useHeight * imgRadio;\r\n          this.lckWidth = 0;\r\n        }\r\n      }\r\n\r\n      this.scaleSize = 1;\r\n      this.rotateDeg = 0;\r\n      this.posWidth = (allWidth - useWidth) / 2 | 0;\r\n      this.posHeight = (allHeight - useHeight - tH) / 2 | 0;\r\n      this.useWidth = useWidth | 0;\r\n      this.useHeight = useHeight | 0;\r\n      this.centerX = this.posWidth + useWidth / 2;\r\n      this.centerY = this.posHeight + useHeight / 2;\r\n      this.focusX = 0;\r\n      this.focusY = 0;\r\n\r\n      let style = this.sS,\r\n        left = parseInt(style.left),\r\n        top = parseInt(style.top),\r\n        width = parseInt(style.width),\r\n        height = parseInt(style.height),\r\n        canvas = this.canvas,\r\n        canvasOper = this.canvasOper,\r\n        cc = this.cc,\r\n        cco = this.cco;\r\n\r\n      cco.beginPath();\r\n      cco.setLineWidth(3);\r\n      cco.setGlobalAlpha(1);\r\n      cco.setStrokeStyle('white');\r\n      cco.strokeRect(left, top, width, height);\r\n\r\n      cco.setFillStyle('black');\r\n      cco.setGlobalAlpha(0.5);\r\n      cco.fillRect(0, 0, this.wW, top);\r\n      cco.fillRect(0, top, left, height);\r\n      cco.fillRect(0, top + height, this.wW, this.wH - height - top - tH);\r\n      cco.fillRect(left + width, top, this.wW - width - left, height);\r\n\r\n      cco.setGlobalAlpha(1);\r\n      cco.setStrokeStyle('red');\r\n      cco.moveTo(left + 15, top);\r\n      cco.lineTo(left, top);\r\n      cco.lineTo(left, top + 15);\r\n      cco.moveTo(left + width - 15, top);\r\n      cco.lineTo(left + width, top);\r\n      cco.lineTo(left + width, top + 15);\r\n      cco.moveTo(left + 15, top + height);\r\n      cco.lineTo(left, top + height);\r\n      cco.lineTo(left, top + height - 15);\r\n      cco.moveTo(left + width - 15, top + height);\r\n      cco.lineTo(left + width, top + height);\r\n      cco.lineTo(left + width, top + height - 15);\r\n      cco.stroke();\r\n\r\n      cco.draw(false, () => {\r\n        if (ini) {\r\n          this.sD = 'flex';\r\n          this.sT = this.drawTop + 'px';\r\n          this.fDrawImage(true);\r\n        }\r\n      });\r\n      this.$emit(\"init\");\r\n    },\r\n    fDrawImage (ini = false) {\r\n      let tm_now = Date.now();\r\n      if (tm_now - this.drawTm < 20) return;\r\n      this.drawTm = tm_now;\r\n\r\n      let cc = this.cc,\r\n        imgWidth = this.useWidth * this.scaleSize,\r\n        imgHeight = this.useHeight * this.scaleSize;\r\n\r\n      // #ifdef MP-ALIPAY\t\r\n      cc.save();\r\n      // #endif\r\n\r\n      if (this.bgImage) {\r\n        // #ifdef MP-ALIPAY\r\n        cc.clearRect(0, 0, this.wW, this.wH - tH);\r\n        // #endif\r\n        // #ifndef MP-ALIPAY\r\n        cc.drawImage(this.bgImage, 0, 0, this.wW, this.wH - tH);\r\n        // #endif\r\n      } else {\r\n        cc.fillRect(0, 0, this.wW, this.wH - tH);\r\n      }\r\n\r\n      if (this.isin) {\r\n        let cx = this.focusX * (this.scaleSize - 1),\r\n          cy = this.focusY * (this.scaleSize - 1);\r\n\r\n        cc.translate(this.centerX, this.centerY);\r\n        cc.rotate(this.rotateDeg * Math.PI / 180);\r\n        cc.drawImage(this.imgPath, this.posWidth - this.centerX - cx, this.posHeight - this.centerY - cy, imgWidth, imgHeight);\r\n\r\n      } else {\r\n        cc.translate(this.posWidth + imgWidth / 2, this.posHeight + imgHeight / 2);\r\n        cc.rotate(this.rotateDeg * Math.PI / 180);\r\n        cc.drawImage(this.imgPath, -imgWidth / 2, -imgHeight / 2, imgWidth, imgHeight);\r\n      }\r\n\r\n      cc.draw(false);\r\n\r\n      // #ifdef MP-ALIPAY\r\n      cc.restore();\r\n      // #endif\r\n    },\r\n    fPreview () {\r\n      if (this.fPreviewing) return;\r\n      this.fPreviewing = true;\r\n      setTimeout(() => {\r\n        this.fPreviewing = false;\r\n      }, 1000);\r\n\r\n      let style = this.sS,\r\n        x = parseInt(style.left),\r\n        y = parseInt(style.top),\r\n        width = parseInt(style.width),\r\n        height = parseInt(style.height);\r\n\r\n      // #ifdef MP-ALIPAY\r\n      uni.showLoading();\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.showLoading({\r\n        title: '加载中...',\r\n        mask: true\r\n      });\r\n      // #endif\r\n\r\n      // #ifdef MP-ALIPAY\r\n      this.cc.toTempFilePath({\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n        expWidth: width * this.pixelRatio,\r\n        expHeight: height * this.pixelRatio,\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          this.prvImgTmp = r = r.apFilePath;\r\n          let ccp = this.ccp,\r\n            prvX = this.wW,\r\n            prvY = parseInt(this.csH),\r\n            prvWidth = parseInt(this.sS.width),\r\n            prvHeight = parseInt(this.sS.height),\r\n            useWidth = prvX - 40,\r\n            useHeight = prvY - 80,\r\n            radio = useWidth / prvWidth,\r\n            rHeight = prvHeight * radio;\r\n          if (rHeight < useHeight) {\r\n            prvWidth = useWidth;\r\n            prvHeight = rHeight;\r\n          } else {\r\n            radio = useHeight / prvHeight;\r\n            prvWidth *= radio;\r\n            prvHeight = useHeight;\r\n          }\r\n          ccp.fillRect(0, 0, prvX, prvY);\r\n          this.prvX = prvX = ((prvX - prvWidth) / 2) | 0;\r\n          this.prvY = prvY = ((prvY - prvHeight) / 2) | 0;\r\n          this.prvWidth = prvWidth = prvWidth | 0;\r\n          this.prvHeight = prvHeight = prvHeight | 0;\r\n          ccp.drawImage(r, prvX, prvY, prvWidth, prvHeight);\r\n          ccp.draw(false);\r\n\r\n          this.sO = false;\r\n          this.pT = '0';\r\n        },\r\n        fail: () => {\r\n          uni.showToast({\r\n            title: \"error2\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n        }\r\n      });\r\n      // #endif\r\n\r\n      // #ifndef MP-ALIPAY\r\n      uni.canvasToTempFilePath({\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height,\r\n        expWidth: width * this.pixelRatio,\r\n        expHeight: height * this.pixelRatio,\r\n        canvasId: 'avatar-canvas',\r\n        fileType: this.fType,\r\n        quality: this.qlty,\r\n        success: (r) => {\r\n          this.prvImgTmp = r = r.tempFilePath;\r\n\r\n          let ccp = this.ccp,\r\n            prvX = this.wW,\r\n            prvY = parseInt(this.csH);\r\n\r\n          // #ifndef H5||MP-WEIXIN||APP-PLUS\r\n          prvY += tH;\r\n          // #endif\r\n          // #ifdef APP-PLUS\r\n          if (this.platform === 'android') {\r\n            prvY += tH;\r\n          }\r\n          // #endif\r\n\r\n          let prvWidth = parseInt(this.sS.width),\r\n            prvHeight = parseInt(this.sS.height),\r\n            useWidth = prvX - 40,\r\n            useHeight = prvY - 80,\r\n            radio = useWidth / prvWidth,\r\n            rHeight = prvHeight * radio;\r\n          if (rHeight < useHeight) {\r\n            prvWidth = useWidth;\r\n            prvHeight = rHeight;\r\n          } else {\r\n            radio = useHeight / prvHeight;\r\n            prvWidth *= radio;\r\n            prvHeight = useHeight;\r\n          }\r\n\r\n          ccp.fillRect(0, 0, prvX, prvY);\r\n          this.prvX = prvX = ((prvX - prvWidth) / 2) | 0;\r\n          this.prvY = prvY = ((prvY - prvHeight) / 2) | 0;\r\n          this.prvWidth = prvWidth = prvWidth | 0;\r\n          this.prvHeight = prvHeight = prvHeight | 0;\r\n          ccp.drawImage(r, prvX, prvY, prvWidth, prvHeight);\r\n          ccp.draw(false);\r\n\r\n          // #ifdef H5\r\n          this.btop(r).then((r) => {\r\n            this.sO = false;\r\n            this.pT = this.drawTop + 'px';\r\n          })\r\n          // #endif\r\n\r\n          this.sO = false;\r\n          // if (this.platform === 'android') this.sO = false;\r\n          this.pT = this.drawTop + 'px';\r\n        },\r\n        fail: () => {\r\n          uni.showToast({\r\n            title: \"error2\",\r\n            duration: 2000,\r\n          })\r\n        },\r\n        complete: () => {\r\n          uni.hideLoading();\r\n        }\r\n      }, this);\r\n      // #endif\r\n    },\r\n    fChooseImg (params = undefined, data = undefined) {\r\n      if (params) {\r\n        let sW = params.selWidth,\r\n          sH = params.selHeight,\r\n          expWidth = params.expWidth,\r\n          expHeight = params.expHeight,\r\n          quality = params.quality,\r\n          canRotate = params.canRotate,\r\n          canScale = params.canScale,\r\n          minScale = params.minScale,\r\n          maxScale = params.maxScale,\r\n          stretch = params.stretch,\r\n          fileType = params.fileType,\r\n          inner = params.inner,\r\n          lock = params.lock;\r\n\r\n        expWidth && (this.eW = expWidth.toString().indexOf('rpx') >= 0 ? parseInt(expWidth) * this.pxRatio : parseInt(\r\n          expWidth));\r\n        expHeight && (this.eH = expHeight.toString().indexOf('rpx') >= 0 ? parseInt(expHeight) * this.pxRatio : parseInt(\r\n          expHeight));\r\n        this.letRotate = (canRotate === false || inner === true || inner === 'true' || canRotate === 'false') ? 0 : 1;\r\n        this.letScale = (canScale === false || canScale === 'false') ? 0 : 1;\r\n        this.qlty = parseFloat(quality) || 1;\r\n        this.mnScale = parseFloat(minScale) || 0.3;\r\n        this.mxScale = parseFloat(maxScale) || 4;\r\n        this.stc = stretch;\r\n        this.isin = (inner === true || inner === 'true') ? 1 : 0;\r\n        this.fType = fileType === 'jpg' ? 'jpg' : 'png';\r\n        this.lck = lock;\r\n        if (this.isin || !this.letRotate) {\r\n          this.bW = '24%';\r\n          // this.bD = 'none';\r\n        } else {\r\n          this.bW = '19%';\r\n          // this.bD = 'flex';\r\n        }\r\n\r\n        if (sW && sH) {\r\n          sW = sW.toString().indexOf('rpx') >= 0 ? parseInt(sW) * this.pxRatio : parseInt(sW);\r\n          sH = sH.toString().indexOf('rpx') >= 0 ? parseInt(sH) * this.pxRatio : parseInt(sH);\r\n          this.sS.width = sW + 'px';\r\n          this.sS.height = sH + 'px';\r\n          this.sS.top = ((this.wH - sH - tH) | 0) / 2 + 'px';\r\n          this.sS.left = ((this.wW - sW) | 0) / 2 + 'px';\r\n          this.hasSel = true;\r\n        }\r\n      }\r\n      this.rtn = data;\r\n      // this.indx = index;\r\n      this.fSelect();\r\n    },\r\n    fRotate () {\r\n      this.rotateDeg += 90 - this.rotateDeg % 90;\r\n      this.fDrawImage();\r\n    },\r\n    fStart (e) {\r\n      let touches = e.touches,\r\n        touch0 = touches[0],\r\n        touch1 = touches[1];\r\n\r\n      this.touch0 = touch0;\r\n      this.touch1 = touch1;\r\n\r\n      if (touch1) {\r\n        let x = touch1.x - touch0.x,\r\n          y = touch1.y - touch0.y;\r\n        this.fgDistance = Math.sqrt(x * x + y * y);\r\n      }\r\n    },\r\n    fMove (e) {\r\n      let touches = e.touches,\r\n        touch0 = touches[0],\r\n        touch1 = touches[1];\r\n\r\n      if (touch1) {\r\n        let x = touch1.x - touch0.x,\r\n          y = touch1.y - touch0.y,\r\n          fgDistance = Math.sqrt(x * x + y * y),\r\n          scaleSize = 0.005 * (fgDistance - this.fgDistance),\r\n          beScaleSize = this.scaleSize + scaleSize;\r\n\r\n        do {\r\n          if (!this.letScale) break;\r\n          if (beScaleSize < this.mnScale) break;\r\n          if (beScaleSize > this.mxScale) break;\r\n\r\n          let growX = this.useWidth * scaleSize / 2,\r\n            growY = this.useHeight * scaleSize / 2;\r\n          if (this.isin) {\r\n            let imgWidth = this.useWidth * beScaleSize,\r\n              imgHeight = this.useHeight * beScaleSize,\r\n              l = this.posWidth - growX,\r\n              t = this.posHeight - growY,\r\n              r = l + imgWidth,\r\n              b = t + imgHeight,\r\n              left = parseInt(this.sS.left),\r\n              top = parseInt(this.sS.top),\r\n              width = parseInt(this.sS.width),\r\n              height = parseInt(this.sS.height),\r\n              right = left + width,\r\n              bottom = top + height,\r\n              cx, cy;\r\n\r\n            if (imgWidth <= width || imgHeight <= height) break;\r\n            this.cx = cx = this.focusX * beScaleSize - this.focusX,\r\n              this.cy = cy = this.focusY * beScaleSize - this.focusY;\r\n            this.posWidth -= growX;\r\n            this.posHeight -= growY;\r\n            if (this.posWidth - cx > left) {\r\n              this.posWidth = left + cx;\r\n            }\r\n            if (this.posWidth + imgWidth - cx < right) {\r\n              this.posWidth = right - imgWidth + cx;\r\n            }\r\n            if (this.posHeight - cy > top) {\r\n              this.posHeight = top + cy;\r\n            }\r\n            if (this.posHeight + imgHeight - cy < bottom) {\r\n              this.posHeight = bottom - imgHeight + cy;\r\n            }\r\n          } else {\r\n            this.posWidth -= growX;\r\n            this.posHeight -= growY;\r\n          }\r\n\r\n          this.scaleSize = beScaleSize;\r\n        } while (0);\r\n        this.fgDistance = fgDistance;\r\n        if (touch1.x !== touch0.x && this.letRotate) {\r\n          x = (this.touch1.y - this.touch0.y) / (this.touch1.x - this.touch0.x);\r\n          y = (touch1.y - touch0.y) / (touch1.x - touch0.x);\r\n          this.rotateDeg += Math.atan((y - x) / (1 + x * y)) * 180 / Math.PI;\r\n          this.touch0 = touch0;\r\n          this.touch1 = touch1;\r\n        }\r\n\r\n        this.fDrawImage();\r\n      } else if (this.touch0) {\r\n        let x = touch0.x - this.touch0.x,\r\n          y = touch0.y - this.touch0.y,\r\n          beX = this.posWidth + x,\r\n          beY = this.posHeight + y;\r\n        if (this.isin) {\r\n          let imgWidth = this.useWidth * this.scaleSize,\r\n            imgHeight = this.useHeight * this.scaleSize,\r\n            l = beX,\r\n            t = beY,\r\n            r = l + imgWidth,\r\n            b = t + imgHeight,\r\n            left = parseInt(this.sS.left),\r\n            top = parseInt(this.sS.top),\r\n            right = left + parseInt(this.sS.width),\r\n            bottom = top + parseInt(this.sS.height),\r\n            cx, cy;\r\n\r\n          this.cx = cx = this.focusX * this.scaleSize - this.focusX;\r\n          this.cy = cy = this.focusY * this.scaleSize - this.focusY;\r\n\r\n          if (!this.lckWidth && Math.abs(x) < 100) {\r\n            if (left < l - cx) {\r\n              this.posWidth = left + cx;\r\n            } else if (right > r - cx) {\r\n              this.posWidth = right - imgWidth + cx;\r\n            } else {\r\n              this.posWidth = beX;\r\n              this.focusX -= x;\r\n            }\r\n          }\r\n          if (!this.lckHeight && Math.abs(y) < 100) {\r\n            if (top < t - cy) {\r\n              this.focusY -= (top + cy - this.posHeight);\r\n              this.posHeight = top + cy;\r\n            } else if (bottom > b - cy) {\r\n              this.focusY -= (bottom + cy - (this.posHeight + imgHeight));\r\n              this.posHeight = bottom - imgHeight + cy;\r\n            } else {\r\n              this.posHeight = beY;\r\n              this.focusY -= y;\r\n            }\r\n          }\r\n        } else {\r\n          if (Math.abs(x) < 100 && !this.lckWidth) this.posWidth = beX;\r\n          if (Math.abs(y) < 100 && !this.lckHeight) this.posHeight = beY;\r\n          this.focusX -= x;\r\n          this.focusY -= y;\r\n        }\r\n\r\n        this.touch0 = touch0;\r\n        this.fDrawImage();\r\n      }\r\n    },\r\n    fEnd (e) {\r\n      let touches = e.touches,\r\n        touch0 = touches && touches[0],\r\n        touch1 = touches && touches[1];\r\n      if (touch0) {\r\n        this.touch0 = touch0;\r\n      } else {\r\n        this.touch0 = null;\r\n        this.touch1 = null;\r\n      }\r\n    },\r\n    fHideImg () {\r\n      this.prvImg = '';\r\n      this.pT = '-10000px';\r\n      this.sO = true;\r\n      this.prvImgData = null;\r\n      this.target = null;\r\n    },\r\n    fClose () {\r\n      this.sD = 'none';\r\n      this.sT = '-10000px';\r\n      this.hasSel = false;\r\n      this.fHideImg();\r\n      this.noBar || uni.showTabBar();\r\n      this.$emit(\"end\");\r\n    },\r\n    fGetImgData () {\r\n      return new Promise((resolve, reject) => {\r\n        let prvX = this.prvX,\r\n          prvY = this.prvY,\r\n          prvWidth = this.prvWidth,\r\n          prvHeight = this.prvHeight;\r\n        // #ifdef MP-ALIPAY\r\n        this.ccp.getImageData({\r\n          x: prvX,\r\n          y: prvY,\r\n          width: prvWidth,\r\n          height: prvHeight,\r\n          success (res) {\r\n            resolve(res.data);\r\n          },\r\n          fail (err) {\r\n            reject(err);\r\n          }\r\n        }, this);\r\n        // #endif\r\n        // #ifndef MP-ALIPAY\r\n        uni.canvasGetImageData({\r\n          canvasId: 'prv-canvas',\r\n          x: prvX,\r\n          y: prvY,\r\n          width: prvWidth,\r\n          height: prvHeight,\r\n          success (res) {\r\n            resolve(res.data);\r\n          },\r\n          fail (err) {\r\n            reject(err);\r\n          }\r\n        }, this);\r\n        // #endif\r\n      });\r\n    },\r\n    async fColorChange (e) {\r\n      let tm_now = Date.now();\r\n      if (tm_now - this.prvTm < 100) return;\r\n      this.prvTm = tm_now;\r\n\r\n      // #ifdef MP-ALIPAY\r\n      uni.showLoading();\r\n      // #endif\r\n      // #ifndef MP-ALIPAY\r\n      uni.showLoading({\r\n        title: '加载中...',\r\n        mask: true\r\n      });\r\n      // #endif\r\n\r\n      if (!this.prvImgData) {\r\n        if (!(this.prvImgData = await this.fGetImgData().catch(() => {\r\n          uni.showToast({\r\n            title: \"error_read\",\r\n            duration: 2000,\r\n          })\r\n        }))) return;\r\n\r\n        this.target = new Uint8ClampedArray(this.prvImgData.length);\r\n      }\r\n\r\n      let data = this.prvImgData,\r\n        target = this.target,\r\n        i = e.detail.value,\r\n        r, g, b, a, h, s, l, d, p, q, t, min, max, hK, tR, tG, tB;\r\n\r\n      if (i === 0) {\r\n        target = data;\r\n      } else {\r\n        i = (i + 100) / 200;\r\n        if (i < 0.005) i = 0;\r\n        if (i > 0.995) i = 1;\r\n        for (let n = data.length - 1; n >= 0; n -= 4) {\r\n          r = data[n - 3] / 255;\r\n          g = data[n - 2] / 255;\r\n          b = data[n - 1] / 255;\r\n          max = Math.max(r, g, b);\r\n          min = Math.min(r, g, b);\r\n          d = max - min;\r\n          if (max === min) {\r\n            h = 0;\r\n          } else if (max === r && g >= b) {\r\n            h = 60 * ((g - b) / d);\r\n          } else if (max === r && g < b) {\r\n            h = 60 * ((g - b) / d) + 360;\r\n          } else if (max === g) {\r\n            h = 60 * ((b - r) / d) + 120;\r\n          } else if (max === b) {\r\n            h = 60 * ((r - g) / d) + 240;\r\n          }\r\n          l = (max + min) / 2;\r\n          if (l === 0 || max === min) {\r\n            s = 0;\r\n          } else if (0 < l && l <= 0.5) {\r\n            s = d / (2 * l);\r\n          } else if (l > 0.5) {\r\n            s = d / (2 - 2 * l);\r\n          }\r\n          data[n] && (a = data[n]);\r\n\r\n          if (i < 0.5) {\r\n            s = s * i / 0.5;\r\n          } else if (i > 0.5) {\r\n            s = 2 * s + 2 * i - (s * i / 0.5) - 1;\r\n          }\r\n\r\n          if (s === 0) {\r\n            r = g = b = Math.round(l * 255);\r\n          } else {\r\n            if (l < 0.5) {\r\n              q = l * (1 + s);\r\n            } else if (l >= 0.5) {\r\n              q = l + s - (l * s);\r\n            }\r\n            p = 2 * l - q;\r\n            hK = h / 360;\r\n            tR = hK + 1 / 3;\r\n            tG = hK;\r\n            tB = hK - 1 / 3;\r\n            let correctRGB = (t) => {\r\n              if (t < 0) {\r\n                return t + 1.0;\r\n              }\r\n              if (t > 1) {\r\n                return t - 1.0;\r\n              }\r\n              return t;\r\n            };\r\n            let createRGB = (t) => {\r\n              if (t < (1 / 6)) {\r\n                return p + ((q - p) * 6 * t);\r\n              } else if (t >= (1 / 6) && t < (1 / 2)) {\r\n                return q;\r\n              } else if (t >= (1 / 2) && t < (2 / 3)) {\r\n                return p + ((q - p) * 6 * ((2 / 3) - t));\r\n              }\r\n              return p;\r\n            };\r\n            r = tR = Math.round(createRGB(correctRGB(tR)) * 255);\r\n            g = tG = Math.round(createRGB(correctRGB(tG)) * 255);\r\n            b = tB = Math.round(createRGB(correctRGB(tB)) * 255);\r\n          }\r\n          a && (target[n] = a);\r\n          target[n - 3] = r;\r\n          target[n - 2] = g;\r\n          target[n - 1] = b;\r\n        }\r\n      }\r\n\r\n      let prvX = this.prvX,\r\n        prvY = this.prvY,\r\n        prvWidth = this.prvWidth,\r\n        prvHeight = this.prvHeight;\r\n\r\n      // #ifdef MP-ALIPAY\r\n      this.ccp.putImageData({\r\n        x: prvX,\r\n        y: prvY,\r\n        width: prvWidth,\r\n        height: prvHeight,\r\n        data: target,\r\n        fail () {\r\n          uni.showToast({\r\n            title: 'error_put',\r\n            duration: 2000\r\n          })\r\n        },\r\n        complete () {\r\n          uni.hideLoading();\r\n        }\r\n      }, this);\r\n      // #endif\r\n\r\n      // #ifndef MP-ALIPAY\r\n      uni.canvasPutImageData({\r\n        canvasId: 'prv-canvas',\r\n        x: prvX,\r\n        y: prvY,\r\n        width: prvWidth,\r\n        height: prvHeight,\r\n        data: target,\r\n        fail () {\r\n          uni.showToast({\r\n            title: 'error_put',\r\n            duration: 2000\r\n          })\r\n        },\r\n        complete () {\r\n          uni.hideLoading();\r\n        }\r\n      }, this);\r\n      // #endif\r\n    },\r\n    btop (base64) {\r\n      this.base64 = base64;\r\n      return new Promise(function (resolve, reject) {\r\n        var arr = base64.split(','),\r\n          mime = arr[0].match(/:(.*?);/)[1],\r\n          bstr = atob(arr[1]),\r\n          n = bstr.length,\r\n          u8arr = new Uint8Array(n);\r\n        while (n--) {\r\n          u8arr[n] = bstr.charCodeAt(n);\r\n        }\r\n        return resolve((window.URL || window.webkitURL).createObjectURL(new Blob([u8arr], {\r\n          type: mime\r\n        })));\r\n      });\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.my-canvas {\r\n  display: flex;\r\n  position: fixed !important;\r\n  background: #000000;\r\n  left: 0;\r\n  z-index: 100000;\r\n  width: 100%;\r\n}\r\n\r\n.my-avatar {\r\n  width: 0rpx;\r\n  height: 0rpx;\r\n  border-radius: 100%;\r\n}\r\n\r\n.oper-canvas {\r\n  display: flex;\r\n  position: fixed !important;\r\n  left: 0;\r\n  z-index: 100001;\r\n  width: 100%;\r\n}\r\n\r\n.prv-canvas {\r\n  display: flex;\r\n  position: fixed !important;\r\n  background: #000000;\r\n  left: 0;\r\n  z-index: 200000;\r\n  width: 100%;\r\n}\r\n\r\n.oper-wrapper {\r\n  height: 50px;\r\n  position: fixed !important;\r\n  box-sizing: border-box;\r\n  border: 1px solid #f1f1f1;\r\n  background: #ffffff;\r\n  width: 100%;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 100009;\r\n  flex-direction: row;\r\n}\r\n\r\n.oper {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 10rpx 20rpx;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  align-self: center;\r\n}\r\n\r\n.btn-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  /* #ifndef H5 */\r\n  flex-grow: 1;\r\n  /* #endif */\r\n  /* #ifdef H5 */\r\n  height: 50px;\r\n  /* #endif */\r\n  justify-content: space-between;\r\n}\r\n\r\n.btn-wrapper view {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  color: #333;\r\n  border: 1px solid #f1f1f1;\r\n  border-radius: 6%;\r\n}\r\n\r\n.hover {\r\n  background: #f1f1f1;\r\n  border-radius: 6%;\r\n}\r\n\r\n.clr-wrapper {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-grow: 1;\r\n}\r\n\r\n.clr-wrapper view {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 16px;\r\n  color: #333;\r\n  border: 1px solid #f1f1f1;\r\n  border-radius: 6%;\r\n}\r\n\r\n.my-slider {\r\n  flex-grow: 1;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./yq-avatar.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./yq-avatar.vue?vue&type=style&index=0&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1625538123654\n      var cssReload = require(\"D:/word/project/business-projects/external/tianmu-league/h5/node_modules/@vue/cli-service/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}